{"ast":null,"code":"import { ActionTypes } from \"./Constants/action-types\";\nconst initialState = {\n  products: [],\n  filterItem: [],\n  filteredProductsByCategory: [],\n  cart: []\n};\nexport const productsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case ActionTypes.SET_PRODUCTS:\n      return { ...state,\n        products: payload,\n        filterItem: payload,\n        filteredProductsByCategory: payload\n      };\n\n    case ActionTypes.SEARCH_VALUES:\n      return { ...state,\n        filterItem: payload.products\n      };\n\n    case ActionTypes.FILTER_BY_CATEGORY:\n      // console.log(payload.products);\n      return { ...state,\n        filteredProductsByCategory: payload.products\n      };\n\n    default:\n      return state;\n  }\n};\nexport const handleCart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState.cart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const product = action.payload;\n\n  switch (action.type) {\n    case ActionTypes.ADD_CART:\n      const exist = state.find(x => x.id === product.id);\n\n      if (exist) {\n        return state.map(x => x.id === product.id ? { ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        const product = action.payload;\n        return [...state, { ...product,\n          qty: 1\n        }];\n      }\n\n    case ActionTypes.DELETE_CART:\n      const exist1 = state.find(x => x.id === product.id);\n\n      if (exist1.qty === 1) {\n        return state.filter(x => x.id !== exist1.id);\n      } else {\n        return state.map(x => x.id === product.id ? { ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n\n    case ActionTypes.REMOVE_SELECTED_PRODUCT:\n      console.log(initialState.cart);\n      const exist2 = state.find(x => x.id === product.id);\n\n      if (exist2) {\n        return state.filter(x => x.id !== exist2.id);\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/dody/Documents/MERN/Product/client/src/Redux/reducer/productsReducer.js"],"names":["ActionTypes","initialState","products","filterItem","filteredProductsByCategory","cart","productsReducer","state","type","payload","SET_PRODUCTS","SEARCH_VALUES","FILTER_BY_CATEGORY","handleCart","action","product","ADD_CART","exist","find","x","id","map","qty","DELETE_CART","exist1","filter","REMOVE_SELECTED_PRODUCT","console","log","exist2"],"mappings":"AAAA,SAASA,WAAT,QAA4B,0BAA5B;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,UAAU,EAAE,EAFQ;AAGpBC,EAAAA,0BAA0B,EAAE,EAHR;AAIpBC,EAAAA,IAAI,EAAE;AAJc,CAArB;AAOA,OAAO,MAAMC,eAAe,GAAG,YAA6C;AAAA,MAA5CC,KAA4C,uEAApCN,YAAoC;AAAA,MAAtB;AAAEO,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC3E,UAAQD,IAAR;AACC,SAAKR,WAAW,CAACU,YAAjB;AACC,aAAO,EAAE,GAAGH,KAAL;AAAYL,QAAAA,QAAQ,EAAEO,OAAtB;AAA+BN,QAAAA,UAAU,EAAEM,OAA3C;AAAoDL,QAAAA,0BAA0B,EAAEK;AAAhF,OAAP;;AACD,SAAKT,WAAW,CAACW,aAAjB;AACC,aAAO,EAAE,GAAGJ,KAAL;AAAYJ,QAAAA,UAAU,EAAEM,OAAO,CAACP;AAAhC,OAAP;;AACD,SAAKF,WAAW,CAACY,kBAAjB;AACC;AACA,aAAO,EAAE,GAAGL,KAAL;AAAYH,QAAAA,0BAA0B,EAAEK,OAAO,CAACP;AAAhD,OAAP;;AACD;AACC,aAAOK,KAAP;AATF;AAWA,CAZM;AAcP,OAAO,MAAMM,UAAU,GAAG,YAAuC;AAAA,MAAtCN,KAAsC,uEAA9BN,YAAY,CAACI,IAAiB;AAAA,MAAXS,MAAW;AAChE,QAAMC,OAAO,GAAGD,MAAM,CAACL,OAAvB;;AACA,UAAQK,MAAM,CAACN,IAAf;AACC,SAAKR,WAAW,CAACgB,QAAjB;AACC,YAAMC,KAAK,GAAGV,KAAK,CAACW,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,OAAO,CAACK,EAAnC,CAAd;;AACA,UAAIH,KAAJ,EAAW;AACV,eAAOV,KAAK,CAACc,GAAN,CAAWF,CAAD,IAChBA,CAAC,CAACC,EAAF,KAASL,OAAO,CAACK,EAAjB,GAAsB,EAAE,GAAGD,CAAL;AAAQG,UAAAA,GAAG,EAAEH,CAAC,CAACG,GAAF,GAAQ;AAArB,SAAtB,GAAiDH,CAD3C,CAAP;AAGA,OAJD,MAIO;AACN,cAAMJ,OAAO,GAAGD,MAAM,CAACL,OAAvB;AAEA,eAAO,CAAC,GAAGF,KAAJ,EAAW,EAAE,GAAGQ,OAAL;AAAcO,UAAAA,GAAG,EAAE;AAAnB,SAAX,CAAP;AACA;;AAEF,SAAKtB,WAAW,CAACuB,WAAjB;AACC,YAAMC,MAAM,GAAGjB,KAAK,CAACW,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,OAAO,CAACK,EAAnC,CAAf;;AACA,UAAII,MAAM,CAACF,GAAP,KAAe,CAAnB,EAAsB;AACrB,eAAOf,KAAK,CAACkB,MAAN,CAAcN,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASI,MAAM,CAACJ,EAApC,CAAP;AACA,OAFD,MAEO;AAEN,eAAOb,KAAK,CAACc,GAAN,CAAWF,CAAD,IAChBA,CAAC,CAACC,EAAF,KAASL,OAAO,CAACK,EAAjB,GAAsB,EAAE,GAAGD,CAAL;AAAQG,UAAAA,GAAG,EAAEH,CAAC,CAACG,GAAF,GAAQ;AAArB,SAAtB,GAAiDH,CAD3C,CAAP;AAGA;;AACF,SAAKnB,WAAW,CAAC0B,uBAAjB;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY3B,YAAY,CAACI,IAAzB;AACA,YAAMwB,MAAM,GAAGtB,KAAK,CAACW,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASL,OAAO,CAACK,EAAnC,CAAf;;AACA,UAAIS,MAAJ,EAAY;AACX,eAAOtB,KAAK,CAACkB,MAAN,CAAcN,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASS,MAAM,CAACT,EAApC,CAAP;AACA;;AACF;AACC,aAAOb,KAAP;AA9BF;AAgCA,CAlCM","sourcesContent":["import { ActionTypes } from \"./Constants/action-types\";\n\nconst initialState = {\n\tproducts: [],\n\tfilterItem: [],\n\tfilteredProductsByCategory: [],\n\tcart: [],\n};\n\nexport const productsReducer = (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\t\tcase ActionTypes.SET_PRODUCTS:\n\t\t\treturn { ...state, products: payload, filterItem: payload, filteredProductsByCategory: payload, };\n\t\tcase ActionTypes.SEARCH_VALUES:\n\t\t\treturn { ...state, filterItem: payload.products };\n\t\tcase ActionTypes.FILTER_BY_CATEGORY:\n\t\t\t// console.log(payload.products);\n\t\t\treturn { ...state, filteredProductsByCategory: payload.products };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport const handleCart = (state = initialState.cart, action) => {\n\tconst product = action.payload;\n\tswitch (action.type) {\n\t\tcase ActionTypes.ADD_CART:\n\t\t\tconst exist = state.find((x) => x.id === product.id);\n\t\t\tif (exist) {\n\t\t\t\treturn state.map((x) =>\n\t\t\t\t\tx.id === product.id ? { ...x, qty: x.qty + 1 } : x\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst product = action.payload;\n\n\t\t\t\treturn [...state, { ...product, qty: 1 }];\n\t\t\t}\n\n\t\tcase ActionTypes.DELETE_CART:\n\t\t\tconst exist1 = state.find((x) => x.id === product.id);\n\t\t\tif (exist1.qty === 1) {\n\t\t\t\treturn state.filter((x) => x.id !== exist1.id);\n\t\t\t} else {\n\n\t\t\t\treturn state.map((x) =>\n\t\t\t\t\tx.id === product.id ? { ...x, qty: x.qty - 1 } : x\n\t\t\t\t);\n\t\t\t}\n\t\tcase ActionTypes.REMOVE_SELECTED_PRODUCT:\n\t\t\tconsole.log(initialState.cart);\n\t\t\tconst exist2 = state.find((x) => x.id === product.id);\n\t\t\tif (exist2) {\n\t\t\t\treturn state.filter((x) => x.id !== exist2.id);\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};"]},"metadata":{},"sourceType":"module"}